data %>%
group_by(technique) %>%
summarise(mean_grade = mean(current_grade),
sd_grade = sd(current_grade),
mean_exam = mean(exam),
sd_exam = sd(exam))
library(dplyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
data %>%
group_by(technique) %>%
summarise(mean_grade = mean(current_grade),
sd_grade = sd(current_grade),
mean_exam = mean(exam),
sd_exam = sd(exam))
boxplot(exam ~ technique,
data = data,
main = "Exam Score by Studying Technique",
xlab = "Studying Technique",
ylab = "Exam Score",
col = "steelblue",
border = "black"
)
boxplot(current_grade ~ technique,
data = data,
main = "Current Grade by Studying Technique",
xlab = "Studying Technique",
ylab = "Current Grade",
col = "steelblue",
border = "black"
)
anova_model <- aov(current_grade ~ technique, data = data)
#view summary of anova model
summary(anova_model)
anova_model <- aov(current_grade ~ technique+exam, data = data)
#view summary of anova model
print(summary(anova_model))
anova_model <- aov(technique~ current_grade+exam, data = data)
#view summary of anova model
print(summary(anova_model))
overcast<-c(86,65,90,75,10)
rainy<-c(96,80,70,80,81)
sunny<-c(85,95,95,70,70)
data1<-data.frame(overcast,rainy,sunny)
print(data1)
result1<-aov(overcast~rainy+sunny,data=data1)
print(result1)
print(summary(result1))
t<-anova(overcast,rainy,sunny)
print(t)
input <- mtcars
# Create the regression models.
result1 <- aov(mpg~hp*am,data = input)
result2 <- aov(mpg~hp+am,data = input)
# Compare the two models.
print(anova(result1,result2))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
data1<-data.frame(x1,x2,x3)
print(data1)
result1<-aov(x1~x2+x3,data=data1)
print(result1)
print(summary(result1))
result1<-aov(x1~x2*x3,data=data1)
print(result1)
print(summary(result1))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
data1<-data.frame(x1,x2,x3)
print(data1)
t<-anova(x1,x2,x3)
print(t)
t<-oneway.test(x1~x2,data=data1)
print(t)
t<-oneway.test(x1~x2+x3,data=data1)
print(t)
t1<-oneway.test(x1~x2+x3,data=data1)
print(t1)
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
data1<-data.frame(x1,x2,x3)
print(data1)
result1<-aov(x1~x2+x3,data=data1)
print(result1)
print(summary(result1))
result1<-aov(x1~x2,data=data1)
print(result1)
print(summary(result1))
result1<-aov(x1~x2+x3,data=data1)
print(result1)
print(summary(result1))
overcast<-c(86,65,90,75,10)
rainy<-c(96,80,70,80,81)
sunny<-c(85,95,95,70,70)
data1<-data.frame(overcast,rainy,sunny)
print(data1)
result1<-aov(overcast~rainy+sunny,data=data1)
print(result1)
print(summary(result1))
data1<-data.frame(x1,x2,x3)
print(data1)
result1<-aov(x1~x2,data=data1)
print(result1)
print(summary(result1))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
sumx1=sum(x1)
sumx2=sum(x2)
sumx3=sum(x3)
sqrx1=x1*x1
sumsqrx1=sum(sqrx1)
print(sumx1,sumx2,sumx3,sumsqrx1)
print(sumx1)
print(sumx1,sumx2)
print(paste(sumx1,sumx2))
print(paste(sumx1,sumx2,sumx3,sumsqrx1))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
sumx1=sum(x1)
sumx2=sum(x2)
sumx3=sum(x3)
sqrx1=x1*x1
sumsqrx1=sum(sqrx1)
sqrx2=x2*x2
sumsqrx2=sum(sqrx2)
sqrx3=x3*x3
sumsqrx3=sum(sqrx3)
print(paste(sumx1,sumx2,sumx3,sumsqrx1,sumsqrx2,sumsqrx3))
sumofall=sumx1+sumx2+sumx3
corrfactor=sumofall*sumofall/15
sumofall=sumx1+sumx2+sumx3
corrfactor=sumofall*sumofall/15
print(paste(sumofall,corrfactor))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
sumx1=sum(x1)
sumx2=sum(x2)
sumx3=sum(x3)
sqrx1=x1*x1
sumsqrx1=sum(sqrx1)
sqrx2=x2*x2
sumsqrx2=sum(sqrx2)
sqrx3=x3*x3
sumsqrx3=sum(sqrx3)
print(paste(sumx1,sumx2,sumx3,sumsqrx1,sumsqrx2,sumsqrx3))
sumofall=sumx1+sumx2+sumx3
corrfactor=sumofall*sumofall/15
TSS=sumsqrx1+sumsqrx2+sumsqrx3-corrfactor
print(paste(sumofall,corrfactor,TSS))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
sumx1=sum(x1)
sumx2=sum(x2)
sumx3=sum(x3)
sqrx1=x1*x1
sumsqrx1=sum(sqrx1)
sqrx2=x2*x2
sumsqrx2=sum(sqrx2)
sqrx3=x3*x3
sumsqrx3=sum(sqrx3)
print(paste(sumx1,sumx2,sumx3,sumsqrx1,sumsqrx2,sumsqrx3))
sumofall=sumx1+sumx2+sumx3
corrfactor=sumofall*sumofall/15
TSS=sumsqrx1+sumsqrx2+sumsqrx3-corrfactor
bss=(sumx1*sumx1+sumx2*sumx2+sumx3*sumx3)/5-corrfactor
print(paste(sumofall,corrfactor,TSS,bss))
x1<-c(8,10,7,14,11)
x2<-c(7,5,10,9,9)
x3<-c(12,9,13,12,14)
sumx1=sum(x1)
sumx2=sum(x2)
sumx3=sum(x3)
sqrx1=x1*x1
sumsqrx1=sum(sqrx1)
sqrx2=x2*x2
sumsqrx2=sum(sqrx2)
sqrx3=x3*x3
sumsqrx3=sum(sqrx3)
print(paste(sumx1,sumx2,sumx3,sumsqrx1,sumsqrx2,sumsqrx3))
sumofall=sumx1+sumx2+sumx3
corrfactor=sumofall*sumofall/15
TSS=sumsqrx1+sumsqrx2+sumsqrx3-corrfactor
bss=(sumx1*sumx1+sumx2*sumx2+sumx3*sumx3)/5-corrfactor
#print(paste(sumofall,corrfactor,TSS,bss))
wss=TSS-bss
print(paste(sumofall,corrfactor,TSS,bss,wss))
k=3
n=15
#print(paste(sumofall,corrfactor,TSS,bss,wss))
msc=bss/(k-1)
mse=wss/(n-k)
print(paste(sumofall,corrfactor,TSS,bss,msc,mse))
print(paste(sumofall,corrfactor,TSS,bss,msc,mse))
ftest=msc/mse
print(ftest)
data1<-data.frame(x1,x2,x3)
print(data1)
result1<-aov(x1~x2,data=data1)
print(result1)
print(summary(result1))
result1<-aov(x1~x2+x3,data=data1)
print(result1)
print(summary(result1))
t1<-oneway.test(x1~x2+x3,data=data1)
print(t1)
#Live Demo
mtcars
print(mtcars)
input <- mtcars[,c("mpg","disp","hp","wt")]
print(head(input))
input <- mtcars[,c("mpg","disp","hp","wt")]
# Create the relationship model.
model <- lm(mpg~disp+hp+wt, data = input)
print(summary(model))
cat("# # # # The Coefficient Values # # # ","\n")
a <- coef(model)[1]
print(a)
Xdisp <- coef(model)[2]
Xhp <- coef(model)[3]
Xwt <- coef(model)[4]
print(Xdisp)
print(Xhp)
print(Xwt)
print(summary(model))
paste("y=",a,"+",Xdisp,"*x1","+",Xhp,"*x2","+",Xwt,"*x3")
isp=221
hp=102
wt=2.91
#print(37.10-0.0009*221-0.0311*102-3.8008*2.91)
a1 <- data.frame(disp,hp,wt)
result <-  predict(model,a1)
print(result)
x1<-c(2,3,4,5)
x2<-c(4,5,1,5)
x3<-c(3,4,7,5)
y<-c(2,7,5,4)
input<-list(c(y),c(x1),c(x2),c(x3))
print(input)
model<-lm(y~x1+x2+x3,data=input)
print(summary(model))
a <- coef(model)[1]
print(a)
x1 <- coef(model)[2]
x2 <- coef(model)[3]
x3 <- coef(model)[4]
paste("y=",a,"+",x1,"*x1","+",x2,"*x2","+",x3,"*x3")
a1 <- data.frame(x1 = 2,x2=4,x3=4)
result <-  predict(model,a1)
print(result)
setwd("e:/MCA/Unit iv")
data=read.csv("winequality-red.csv")
x1<-data$fixed.acidity
x2<-data$volatile.acidity
x3<-data$citric.acid
x4<-data$residual.sugar
x5<-data$free.sulfur.dioxide
x6<-data$total.sulfur.dioxide
x7<-data$density
x8<-data$pH
x9<-data$sulphates
x10<-data$chlorides
x11=data$alcohol
y<-data$quality
model=lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10+x11)
print(summary(model))
paste("y=",a,"+",x1,"*x1","+",x2,"*x2","+",x3,"*x3", "+",x4,"*x4")
#6.3	0.51	0.13	2.3	0.076	29	40	0.99574	3.42	0.75	11
a1 <- data.frame(x1=6.3,x2=0.51,x3=0.13,x4=2.3,x10=0.076,x5=29,x6=40,x7=0.99574,x8=3.42,x9=0.75,x11=11)
result <-  predict(model,a1)
print(result)
input <- data[,c("fixed.acidity","volatile.acidity","citric.acid","residual.sugar","quality")]
model <- lm(quality~fixed.acidity+volatile.acidity+citric.acid+residual.sugar, data = input)
mtcars
# Select some columns form mtcars.
input <- mtcars[,c("am","cyl","hp","wt")]
print(head(input))
#Create Regression Model
#We use the glm() function to create the regression model and get its summary for analysis.
input <- mtcars[,c("am","cyl","hp","wt")]
am.data = glm(formula = am ~ cyl + hp + wt, data = input, family = binomial)
print(summary(am.data))
xvalues <- c(1.6,2.1,2,2.23,3.71,3.25,3.4,3.86,1.19,2.21)
yvalues <- c(5.19,7.43,6.94,8.11,18.75,14.88,16.06,19.12,3.21,7.58)
# Give the chart file a name.
#png(file = "nls.png")
# Plot these values.
plot(xvalues,yvalues)
#linear Regression
plot(xvalues,yvalues,col = "blue",main = "Regression",
abline(lm(yvalues~xvalues)),cex = 1.9,pch = 20,xlab = "Xvalues",ylab = "YValues")
model <- nls(yvalues ~ b1*xvalues^2+b2,start = list(b1 = 10,b2 = 10))
print(summary(model))
new.data <- data.frame(xvalues = seq(min(xvalues),max(xvalues),len = 100))
print(new.data)
lines(new.data$xvalues,predict(model,newdata = new.data))
print(sum(resid(model)^2))
# Get the confidence intervals on the chosen values of the coefficients.
print(confint(model))
#When we execute the above code, it produces the following result â
input <- warpbreaks
print(head(input))
#Live Demo
output <-glm(formula = breaks ~ wool+tension, data = warpbreaks,
family = poisson)
print(summary(output))
library(party)
print(head(readingSkills))
print(readingSkills)
# Load the party package. It will automatically load other
# dependent packages.
library(party)
# Create the input data frame.
input.dat <- readingSkills[c(1:150),]
# Give the chart file a name.
#png(file = "decision_tree.png")
# Create the tree.
output.tree <- ctree(
nativeSpeaker ~ age + shoeSize + score,
data = input.dat)
plot(output.tree)
x<-c(1,2,3,4)
y<-c(2,4,6,8)
relation <- lm(y~x)
print(relation)
print(summary(relation))
plot(x,y,col = "blue",main = "Month and Trips Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
# Apply the lm() function.
x<-c(1,2,3,4)
y<-c(2,4,6,8)
relation <- lm(y~x)
print(relation)
print(summary(relation))
# Apply the lm() function.
x<-c(1,2,3,4)
y<-c(2,4,6,8)
relation <- lm(y~x)
print(relation)
print(summary(relation))
x<-c(1,2,3,4)
y<-c(2,4,6,8)
relation <- lm(y~x)
print(relation)
print(summary(relation))
plot(x,y,col = "blue",main = "Month and Trips Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
x<-c(1,2,3,4,5)
y<-c(2,4,6,8,10)
relation <- lm(y~x)
print(relation)
print(summary(relation))
plot(x,y,col = "blue",main = "Month and Trips Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
a <- data.frame(x =30)
result <-  predict(relation,a)
print(result)
relation<-lm(x~y)
print(relation)
print(summary(relation))
x<-c(1,2,3,4,5)
y<-c(2,4,6,8,10)
relation<-lm(x~y)
print(relation)
print(summary(relation))
relation<-lm(x~y)
print(relation)
print(summary(relation))
plot(x,y,col = "blue",main = "Month and Trips Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
relation<-lm(x~y)
print(relation)
print(summary(relation))
plot(x,y,col = "blue",main = "Month and Trips Regression",
abline(lm(x~y)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
relation<-lm(x~y)
print(relation)
print(summary(relation))
plot(y,x,col = "blue",main = "Month and Trips Regression",
abline(lm(x~y)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131) # independent variable,or predictor variable
# The resposne vector.
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)# dependent variable or response variable
# Apply the lm() function.
relation <- lm(y~x)
print(relation)
plot(x,y,col = "blue",main = "Height and weight Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Height",ylab = "Weight")
a <- data.frame(x = 170)
result <-  predict(relation,a)
print(result)
x<-c(1,2,3,4,5)
y<-c(2,4,6,8,10)
#Create Relationship Model & get the Coefficients
relation <- lm(y~x)
print(relation)
print(summary(relation))
plot(x,y,col = "blue",main = "Month and Trips Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Month",ylab = "Trips in Kms")
x <- c(151, 174, 138, 186, 128, 136, 179, 163, 152, 131) # independent variable,or predictor variable
# The resposne vector.
y <- c(63, 81, 56, 91, 47, 57, 76, 72, 62, 48)# dependent variable or response variable
# Apply the lm() function.
relation <- lm(y~x)
print(relation)
plot(x,y,col = "blue",main = "Height and weight Regression",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Height",ylab = "Weight")
setwd("e:/MCA/Unit iv")
data=read.csv("winequality-red.csv")
x<-data$fixed.acidity
x<-data$residual.sugar
y<-data$quality
relation <- lm(y~x)
print(relation)
plot(x,y,col = "blue",main = "Acidity & Quality",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Acidity",ylab = "Quality")
setwd("e:/MCA/Unit iv")
data=read.csv("winequality-red.csv")
x<-data$fixed.acidity
y<-data$residual.sugar
#y<-data$quality
relation <- lm(y~x)
print(relation)
plot(x,y,col = "blue",main = "Acidity & Quality",
abline(lm(y~x)),cex = 1.9,pch = 20,xlab = "Acidity",ylab = "Quality")
mtcars
print(mtcars)
input <- mtcars[,c("mpg","disp","hp","wt")]
print(head(input))
mtcars
print(mtcars)
input <- mtcars[,c("mpg","disp","hp","wt")]
print(head(input))
input <- mtcars[,c("mpg","disp","hp","wt")]
# Create the relationship model.
model <- lm(mpg~disp+hp+wt, data = input)
print(summary(model))
print(Xdisp)
print(Xhp)
print(Xwt)
#Create Equation for Regression Model
#Based on the above intercept and coefficient values, we create the mathematical equation.
#Y = a+Xdisp.x1+Xhp.x2+Xwt.x3
print(summary(model))
paste("y=",a,"+",Xdisp,"*x1","+",Xhp,"*x2","+",Xwt,"*x3")
disp=221
hp=102
wt=2.91
#print(37.10-0.0009*221-0.0311*102-3.8008*2.91)
a1 <- data.frame(disp,hp,wt)
result <-  predict(model,a1)
print(result)
setwd("e:/MCA/Unit iv")
data=read.csv("winequality-red.csv")
x1<-data$fixed.acidity
x2<-data$volatile.acidity
x3<-data$citric.acid
x4<-data$residual.sugar
x5<-data$free.sulfur.dioxide
x6<-data$total.sulfur.dioxide
x7<-data$density
x8<-data$pH
x9<-data$sulphates
x10<-data$chlorides
x11=data$alcohol
y<-data$quality
model=lm(y~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10+x11)
print(summary(model))
paste("y=",a,"+",x1,"*x1","+",x2,"*x2","+",x3,"*x3", "+",x4,"*x4")
setwd("e:/MCA/Unit iv")
print(summary(model))
mtcars
# Select some columns form mtcars.
input <- mtcars[,c("am","cyl","hp","wt")]
print(head(input))
#Create Regression Model
#We use the glm() function to create the regression model and get its summary for analysis.
input <- mtcars[,c("am","cyl","hp","wt")]
am.data = glm(formula = am ~ cyl + hp + wt, data = input, family = binomial)
print(summary(am.data))
xvalues <- c(1.6,2.1,2,2.23,3.71,3.25,3.4,3.86,1.19,2.21)
yvalues <- c(5.19,7.43,6.94,8.11,18.75,14.88,16.06,19.12,3.21,7.58)
# Give the chart file a name.
#png(file = "nls.png")
# Plot these values.
plot(xvalues,yvalues)
#linear Regression
plot(xvalues,yvalues,col = "blue",main = "Regression",
abline(lm(yvalues~xvalues)),cex = 1.9,pch = 20,xlab = "Xvalues",ylab = "YValues")
# Take the assumed values and fit into the model.
model <- nls(yvalues ~ b1*xvalues^2+b2,start = list(b1 = 10,b2 = 10))
print(summary(model))
# Plot the chart with new data by fitting it to a prediction from 100 data points.
new.data <- data.frame(xvalues = seq(min(xvalues),max(xvalues),len = 100))
print(new.data)
lines(new.data$xvalues,predict(model,newdata = new.data))
mtcars
# Select some columns form mtcars.
input <- mtcars[,c("am","cyl","hp","wt")]
print(head(input))
#Create Regression Model
#We use the glm() function to create the regression model and get its summary for analysis.
input <- mtcars[,c("am","cyl","hp","wt")]
am.data = glm(formula = am ~ cyl + hp + wt, data = input, family = poisson)
print(summary(am.data))
